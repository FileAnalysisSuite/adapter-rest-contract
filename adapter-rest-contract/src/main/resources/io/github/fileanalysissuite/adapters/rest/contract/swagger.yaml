#
# Copyright 2022 Micro Focus or one of its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: 3.0.0
info:
  description: REST Adapter Contract
  version: "1.0.0"
  title: REST Adapter Contract
  contact:
    email: krzysztof.ploch@microfocus.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: adapter
    description: Rest Adapter API
paths:
  /adapterDescriptor:
    get:
      tags:
        - adapter
      summary: Retrieves a descriptor of the adapter
      description: Retrieves an adapter descriptor containing the adapter name and configuration options.
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterDescriptor'
        '500':
          description: Failed to create the descriptor.
  
  /retrieveFileList:
    post:
      tags:
        - adapter
      summary: Retrieves a list of files
      description: Retrieves a list of files (or repository files) including basic metadata like title and timestamps.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveFileListRequest'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveFileListResponse'
        '400':
          description: 'invalid input'
  /retrieveFilesData:
    post:
      tags:
        - adapter
      summary: Retrieves files data
      description: Retrieves the content and expensive metadata for the files provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveFileDataRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveFileDataResponse'
        
        '400':
          description: 'invalid input, object invalid'

components:
  schemas:
    RepositorySettingDefinition:
      type: object
      properties:
        name:
          type: string
        isRequired:
          type: boolean
        isEncrypted:
          type: string
      required:
        - name
    
    AdapterDescriptor:
      type: object
      properties:
        adapterType:
          type: string
        propertyDefinition:
          type: array
          items:
            $ref: '#/components/schemas/RepositorySettingDefinition'
      required:
        - adapterType
    
    RepositoryOptions:
      type: object
      additionalProperties:
        type: string
    
    ConfigurationOptions:
      type: object
      additionalProperties:
        type: string
    
    RepositoryProperties:
      type: object
      properties:
        configurationOptions:
          $ref: '#/components/schemas/ConfigurationOptions'
        repositoryOptions:
          $ref: '#/components/schemas/RepositoryOptions'

    FailureDetails:
      type: object
      properties:
        fileLocation:
          type: string
        message:
          type: string
      required:
        - message
    
    RetrieveFileListRequest:
      type: object
      description: RetrieveFileList operation parameters.
      properties:
        additionalFilter:
          type: string
          description: Additional filter
        repositoryProperties:
          $ref: '#/components/schemas/RepositoryProperties'
    
    
    RetrieveFileListResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileListItem'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/FailureDetails'
    
    FileListItem:
      type: object
      properties:
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
        partitionHint:
          type: string
      required:
        - fileMetadata
        - partitionHint
    
    FileMetadata:
      type: object
      description: File metadata.
      properties:
        fileLocation:
          type: string
        name:
          type: string
        title:
          type: string
          nullable: true
        createdTime:
          type: string
          format: date-time
          nullable: true
        accessedTime:
          type: string
          format: date-time
          nullable: true
        modifiedTime:
          type: string
          format: date-time
        version:
          type: integer
          nullable: true
        additionalMetadata:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - name
        - fileLocation
        - modifiedTime
    
    RepositoryFile:
      type: object
      properties:
        fileId:
          type: string
        metadata:
          $ref: '#/components/schemas/FileMetadata'
      required:
        - fileId
        - metadata
    
    RetrieveFileDataRequest:
      type: object
      properties:
        repositoryProperties:
          $ref: '#/components/schemas/RepositoryProperties'
        files:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryFile'
      required:
        - files
    
    FileDataItem:
      type: object
      properties:
        fileId:
          type: string
        fileContents:
          type: string
          format: base64
        fileMetadata:
          $ref: '#/components/schemas/FileMetadata'
      required:
        - fileId
        - fileContents
        - fileMetadata

    RetryFileInfo:
      type: object
      properties:
        fileId:
          type: string
        retryAfter:
          type: string
          pattern: '^P(?=\d+[YMWD])(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d+[HMS])(\d+H)?(\d+M)?(\d+S)?)?$'
      required:
        - fileId
        - retryAfter

    RetrieveFileDataResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileDataItem'
        failures:
          type: array
          items:
            $ref: '#/components/schemas/FailureDetails'
        retries:
          type: array
          items:
            $ref: '#/components/schemas/RetryFileInfo'
